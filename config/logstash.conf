input {
  # Task Flow PM application logs
  file {
    path => "/usr/share/logstash/logs/*.log"
    start_position => "beginning"
    tags => ["taskflow", "application"]
    codec => "json"
  }

  # Metrics input
  http {
    port => 5044
    tags => ["taskflow", "metrics"]
  }

  # Beat input for system metrics
  beats {
    port => 5045
    tags => ["taskflow", "beats"]
  }
}

filter {
  if "taskflow" in [tags] {
    # Parse timestamp if present
    if [timestamp] {
      date {
        match => [ "timestamp", "ISO8601" ]
      }
    }

    # Add team and user information
    if [user_id] {
      mutate {
        add_field => { "team_member" => "%{user_id}" }
      }
    }

    # Task performance metrics
    if [task_id] and [duration] {
      mutate {
        convert => { "duration" => "integer" }
        add_field => { "performance_metric" => "task_duration" }
      }
    }

    # Code quality metrics
    if [code_quality] {
      mutate {
        add_field => { "quality_metric" => "%{code_quality}" }
      }
    }

    # Team productivity metrics
    if [action] == "task_completed" {
      mutate {
        add_field => { "productivity_event" => "true" }
      }
    }

    # Add location/IP geolocation
    if [client_ip] {
      geoip {
        source => "client_ip"
        target => "geoip"
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "taskflow-logs-%{+YYYY.MM.dd}"
    template_name => "taskflow"
    template_pattern => "taskflow-*"
    template => {
      "index_patterns" => ["taskflow-*"],
      "settings" => {
        "number_of_shards" => 1,
        "number_of_replicas" => 0
      },
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" },
          "user_id" => { "type" => "keyword" },
          "task_id" => { "type" => "keyword" },
          "team_id" => { "type" => "keyword" },
          "action" => { "type" => "keyword" },
          "duration" => { "type" => "integer" },
          "code_quality" => { "type" => "float" },
          "productivity_score" => { "type" => "float" },
          "geoip" => {
            "properties" => {
              "location" => { "type" => "geo_point" }
            }
          }
        }
      }
    }
  }

  # Debug output
  stdout {
    codec => rubydebug
  }
} 